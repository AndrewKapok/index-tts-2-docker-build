name: Build and Push IndexTTS 2 Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker image version tag'
        required: true
        default: 'latest'
      push_to_registry:
        description: 'Push to GitHub Container Registry'
        type: boolean
        default: true

env:
  IMAGE_NAME: index-tts-2-docker-build
  REGISTRY_NAMESPACE: andrewkapok

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Clean up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        docker system prune -a -f || true
        sudo apt-get clean

    - name: Set up Docker Buildx with disk optimization
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:buildx-stable-1
          # 限制磁盘使用
          disk.space=50G
          # 使用 overlayfs 快照
          snapshotter=overlayfs

    - name: Log in to GitHub Container Registry
      if: github.event_name == 'workflow_dispatch' && inputs.push_to_registry || github.event_name != 'workflow_dispatch'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Configure Git and clone IndexTTS
      run: |
        git lfs install
        echo "Cloning IndexTTS repository..."
        git clone https://github.com/index-tts/index-tts.git index-tts-repo
        cd index-tts-repo
        echo "Pulling LFS files..."
        git lfs pull

    - name: Download models
      run: |
        cd index-tts-repo
        echo "Installing uv package manager..."
        pip install -U uv 
        echo "Installing Python dependencies..."
        uv sync --extra webui --no-dev
        echo "Installing huggingface-cli..."
        uv tool install "huggingface-hub[cli,hf_xet]" 
        echo "Downloading IndexTTS-2 models..."
        uv run hf download IndexTeam/IndexTTS-2 --local-dir=checkpoints
        echo "Verifying downloaded models..."
        find checkpoints -type f -name "*.pth" | head -5 | xargs -I {} ls -la {}

    - name: Build Docker image with optimization
      run: |
        echo "Building optimized Docker image..."
        docker buildx build \
          --platform linux/amd64 \
          --tag ghcr.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version || 'latest' }} \
          --tag ghcr.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest \
          --push \
          --memory=8G \
          --shm-size=1G \
          .
      env:
        # 限制构建资源
        DOCKER_BUILDKIT: 1
        BUILDKIT_PROGRESS: plain

    - name: Clean up build cache
      run: |
        docker buildx prune -f
        docker system prune -f

    - name: Push to GitHub Packages
      if: github.event_name == 'workflow_dispatch' && inputs.push_to_registry || github.event_name != 'workflow_dispatch'
      run: |
        echo "Image successfully pushed to GitHub Container Registry"
        echo "Image: ghcr.io/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version || 'latest' }}"